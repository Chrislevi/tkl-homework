---
- name: "Set docker.tar dynamic dir -> {{ inventory_hostname }}"
  set_fact:
    archive_dir: "{{ lib_dir }}/prereqs"
    local: true
  when: "hostvars[inventory_hostname]['ansible_default_ipv4']['address'] == hostvars[inventory_hostname]['ansible_host']"

- name: "Set docker.tar dynamic dir -> {{ inventory_hostname }}"
  set_fact:
    archive_dir: "/tmp"
    local: false
  when: "hostvars[inventory_hostname]['ansible_default_ipv4']['address'] != hostvars[inventory_hostname]['ansible_host']"

- name: "Check {{ archive.name }}-docker.tar existance"
  stat:
    path: "{{ archive_dir }}/{{ archive.name }}-docker.tar"
  register: tar

- debug: var=tar

- name: "Fetch container binaries"
  synchronize:
    src: "{{ lib_dir }}/prereqs/{{ archive.name }}-docker.tar"
    dest: "{{ archive_dir }}/{{ archive.name }}-docker.tar"
    mode: push
  when: (not local) and (not tar.stat.exists | bool)
  register: fetch

- name: "Load Check {{ archive.name }}-docker.tar to docker images"
  docker_image:
    name: "{{ archive.image }}"
    load_path: "{{ archive_dir }}/{{ archive.name }}-docker.tar"
  when: (tar.stat.exists | bool) or (fetch.changed | bool)

- name: "Archive {{ archive.name }}" # Only sanjer
  docker_image:
    name: "{{ archive.image }}"
    archive_path: "{{ lib_dir }}/prereqs/{{ archive.name }}-docker.tar"
    pull: true
  when: (local) and (not tar.stat.exists | bool)
